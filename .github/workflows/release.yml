name: Semantic Release

# This pipeline should be triggered manually. It will automatically generate a new version based on the changes
# in the repository since the last release. This pipeline will update the `CHANGELOG.md` file, create a new tag,
# and trigger the `publish.yml` pipeline to publish the new version to GitHub Packages.

on:
    workflow_dispatch:
jobs:
    release:
        runs-on: ubuntu-latest
        permissions:
            contents: write
            pull-requests: write
            packages: write

        steps:
            # semantic release
            -   uses: actions/checkout@v4
                with:
                    fetch-depth: 0
                    token: ${{ secrets.GH_PAT }}
            -   uses: oven-sh/setup-bun@v1
                with:
                    bun-version: latest
            -   name: Use Node.js
                uses: actions/setup-node@v4
                with:
                    node-version: '20.x'
            -   run: bun install
            -   run: bun semantic-release
                env:
                    GITHUB_TOKEN: ${{ secrets.GH_PAT }}

            # publish artifacts
            -   name: Set up JDK 8
                uses: actions/setup-java@v4
                with:
                    java-version: '8'
                    distribution: 'temurin'

            -   name: Make gradlew executable
                run: chmod +x ./gradlew

            -   name: Write release version
                if: ${{ github.event_name != 'workflow_dispatch' }}
                run: |
                    VERSION=${GITHUB_REF_NAME#v}
                    echo Version: $VERSION
                    echo "VERSION=$VERSION" >> $GITHUB_ENV

            -   name: Write release version
                if: ${{ github.event_name == 'workflow_dispatch' }}
                env:
                    VERSION: ${{ github.event.inputs.version}}
                run: |
                    echo Version: $VERSION
                    echo "VERSION=$VERSION" >> $GITHUB_ENV

            -   name: Build JAR
                run: ./gradlew build

            -   name: Upload JAR to GitHub Release
                uses: softprops/action-gh-release@v1
                with:
                    files: build/libs/*.jar
                env:
                    GITHUB_TOKEN: ${{ secrets.GH_PAT }}
